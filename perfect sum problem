class Solution {
    // Function to calculate the number of subsets with a given sum
    public int perfectSum(int[] nums, int target) {
        // code here
        int dp[][] = new int[nums.length + 1][target + 1];
        // if(nums[0] <= target) {
        //     dp[0][nums[0]] = 1;
        // }
        
        for(int i = 0; i < nums.length + 1; i++) {
            dp[i][0] = 1;
        }
        for(int i = 1; i < nums.length + 1; i++) {
            for(int j = 0; j < target + 1; j++) {
                int taken = 0, notTaken = 0;
                    if(j - nums[i - 1] >= 0) {
                        taken = dp[i - 1][j - nums[i - 1]];
                    }
                    notTaken = dp[i - 1][j];
                    dp[i][j] = taken + notTaken;
            }
        }
        
        return dp[nums.length][target];
    }
}
